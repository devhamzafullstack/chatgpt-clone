name: Deploy to AWS EC2

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      
    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
        
    - name: Add SSH known hosts
      run: |
        if [ ! -d ~/.ssh ]; then
          mkdir -p ~/.ssh
        fi
        ssh-keyscan ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts
        
    - name: Copy repository to EC2
      run: |
        rsync -avz --exclude='.git' --exclude='node_modules' ./ ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USERNAME }}/ai-chat-app
        
    - name: Create .env file on EC2
      run: |
        ssh ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} "cat > /home/${{ secrets.EC2_USERNAME }}/ai-chat-app/.env << 'EOL'
        # Frontend
        VITE_API_URL=${{ secrets.VITE_API_URL }}
        VITE_CLERK_PUBLISHABLE_KEY=${{ secrets.VITE_CLERK_PUBLISHABLE_KEY }}
        VITE_IMAGE_KIT_ENDPOINT=${{ secrets.VITE_IMAGE_KIT_ENDPOINT }}
        VITE_IMAGE_KIT_PUBLIC_KEY=${{ secrets.VITE_IMAGE_KIT_PUBLIC_KEY }}
        VITE_GEMINI_PUBLIC_KEY=${{ secrets.VITE_GEMINI_PUBLIC_KEY }}
        
        # Backend
        PORT=5000
        IMAGE_KIT_ENDPOINT=${{ secrets.IMAGE_KIT_ENDPOINT }}
        IMAGE_KIT_PUBLIC_KEY=${{ secrets.IMAGE_KIT_PUBLIC_KEY }}
        IMAGE_KIT_PRIVATE_KEY=${{ secrets.IMAGE_KIT_PRIVATE_KEY }}
        CLIENT_URL=${{ secrets.CLIENT_URL }}
        MONGO_URI=${{ secrets.MONGO_URI }}
        CLERK_PUBLISHABLE_KEY=${{ secrets.CLERK_PUBLISHABLE_KEY }}
        CLERK_SECRET_KEY=${{ secrets.CLERK_SECRET_KEY }}
        EOL"
        
    - name: Deploy application
      run: |
        ssh ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} "cd /home/${{ secrets.EC2_USERNAME }}/ai-chat-app && sudo docker-compose down && sudo docker-compose build --no-cache && sudo docker-compose up -d"