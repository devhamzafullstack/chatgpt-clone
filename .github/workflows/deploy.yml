name: Deploy to AWS EC2

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          name: id_rsa
          known_hosts: unnecessary
          if_key_exists: replace

      - name: Deploy to EC2
        run: |
          # Copy files
          rsync -avz -e "ssh -o StrictHostKeyChecking=no" --exclude='.git' --exclude='node_modules' ./ ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}:~/ai-chat-app/

          # Clean up disk space before building
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} "
            sudo docker system prune -af
            sudo docker rm \$(sudo docker ps -aq) 2>/dev/null || true
            sudo docker rmi \$(sudo docker images -q) 2>/dev/null || true
            sudo docker volume prune -f
          "

          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} "
            sudo docker-compose down --rmi all -v --remove-orphans
            sudo docker system prune -af
          "

          # Create .env file
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} "cat > ~/ai-chat-app/.env << 'EOL'
          # Frontend
          VITE_API_URL=${{ secrets.VITE_API_URL }}
          VITE_CLERK_PUBLISHABLE_KEY=${{ secrets.VITE_CLERK_PUBLISHABLE_KEY }}
          VITE_IMAGE_KIT_ENDPOINT=${{ secrets.VITE_IMAGE_KIT_ENDPOINT }}
          VITE_IMAGE_KIT_PUBLIC_KEY=${{ secrets.VITE_IMAGE_KIT_PUBLIC_KEY }}
          VITE_GEMINI_PUBLIC_KEY=${{ secrets.VITE_GEMINI_PUBLIC_KEY }}

          # Backend
          PORT=5000
          IMAGE_KIT_ENDPOINT=${{ secrets.IMAGE_KIT_ENDPOINT }}
          IMAGE_KIT_PUBLIC_KEY=${{ secrets.IMAGE_KIT_PUBLIC_KEY }}
          IMAGE_KIT_PRIVATE_KEY=${{ secrets.IMAGE_KIT_PRIVATE_KEY }}
          CLIENT_URL=${{ secrets.CLIENT_URL }}
          MONGO_URI=${{ secrets.MONGO_URI }}
          CLERK_PUBLISHABLE_KEY=${{ secrets.CLERK_PUBLISHABLE_KEY }}
          CLERK_SECRET_KEY=${{ secrets.CLERK_SECRET_KEY }}
          EOL"

          # Deploy with Docker
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} "cd ~/ai-chat-app && sudo docker-compose up -d --build --force-recreate"
